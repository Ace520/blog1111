(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{471:function(e,t,a){"use strict";a.r(t);var s=a(9),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://github.com/fruitcake/laravel-cors",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/fruitcake/laravel-cors"),a("OutboundLink")],1)]),e._v(" "),a("h1",{attrs:{id:"cors-middleware-for-laravel"}},[e._v("CORS Middleware for Laravel")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/fruitcake/laravel-cors/actions",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://github.com/fruitcake/laravel-cors/workflows/.github/workflows/run-tests.yml/badge.svg",alt:"Build Status"}}),a("OutboundLink")],1),e._v(" "),a("RouterLink",{attrs:{to:"/_posts/LICENSE.html"}},[a("img",{attrs:{src:"https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square",alt:"Software License"}})]),e._v(" "),a("a",{attrs:{href:"https://packagist.org/packages/fruitcake/laravel-cors",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/packagist/dt/fruitcake/laravel-cors.svg?style=flat-square",alt:"Total Downloads"}}),a("OutboundLink")],1)],1),e._v(" "),a("p",[e._v("Based on https://github.com/asm89/stack-cors")]),e._v(" "),a("h2",{attrs:{id:"about"}},[e._v("About")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("laravel-cors")]),e._v(" package allows you to send "),a("a",{attrs:{href:"http://enable-cors.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cross-Origin Resource Sharing"),a("OutboundLink")],1),e._v("\nheaders with Laravel middleware configuration.")]),e._v(" "),a("p",[e._v("If you want to have a global overview of CORS workflow, you can  browse\nthis "),a("a",{attrs:{href:"http://www.html5rocks.com/static/images/cors_server_flowchart.png",target:"_blank",rel:"noopener noreferrer"}},[e._v("image"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"upgrading-from-0-x-barryvdh-laravel-cors"}},[e._v("Upgrading from 0.x / barryvdh-laravel-cors")]),e._v(" "),a("p",[e._v("When upgrading from 0.x versions, there are some breaking changes:")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("A new 'paths' property is used to enable/disable CORS on certain routes. This is empty by default, so fill it correctly!")])]),e._v(" "),a("li",[a("strong",[e._v("Group middleware is no longer supported, use the global middleware")])]),e._v(" "),a("li",[e._v("The vendor name has changed (see installation/usage)")]),e._v(" "),a("li",[e._v("The casing on the props in "),a("code",[e._v("cors.php")]),e._v(" has changed from camelCase to snake_case, so if you already have a "),a("code",[e._v("cors.php")]),e._v(" file you will need to update the props in there to match the new casing.")])]),e._v(" "),a("h2",{attrs:{id:"features"}},[e._v("Features")]),e._v(" "),a("ul",[a("li",[e._v("Handles CORS pre-flight OPTIONS requests")]),e._v(" "),a("li",[e._v("Adds CORS headers to your responses")]),e._v(" "),a("li",[e._v("Match routes to only add CORS to certain Requests")])]),e._v(" "),a("h2",{attrs:{id:"installation"}},[e._v("Installation")]),e._v(" "),a("p",[e._v("Require the "),a("code",[e._v("fruitcake/laravel-cors")]),e._v(" package in your "),a("code",[e._v("composer.json")]),e._v(" and update your dependencies:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("composer require fruitcake/laravel-cors\n")])])]),a("p",[e._v("If you get a conflict, this could be because an older version of barryvdh/laravel-cors or fruitcake/laravel-cors is installed. Remove the conflicting package first, then try install again:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("composer remove barryvdh/laravel-cors fruitcake/laravel-cors\ncomposer require fruitcake/laravel-cors\n")])])]),a("h2",{attrs:{id:"global-usage"}},[e._v("Global usage")]),e._v(" "),a("p",[e._v("To allow CORS for all your routes, add the "),a("code",[e._v("HandleCors")]),e._v(" middleware in the "),a("code",[e._v("$middleware")]),e._v(" property of  "),a("code",[e._v("app/Http/Kernel.php")]),e._v(" class:")]),e._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("protected")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$middleware")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n    \\"),a("span",{pre:!0,attrs:{class:"token package"}},[e._v("Fruitcake"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Cors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("HandleCors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("Now update the config to define the paths you want to run the CORS service on, (see Configuration below):")]),e._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[e._v("'paths'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[e._v("'api/*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),a("h2",{attrs:{id:"configuration"}},[e._v("Configuration")]),e._v(" "),a("p",[e._v("The defaults are set in "),a("code",[e._v("config/cors.php")]),e._v(". Publish the config to copy the file to your own config:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("php artisan vendor:publish --tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"cors"')]),e._v("\n")])])]),a("blockquote",[a("p",[a("strong",[e._v("Note:")]),e._v(" When using custom headers, like "),a("code",[e._v("X-Auth-Token")]),e._v(" or "),a("code",[e._v("X-Requested-With")]),e._v(", you must set the "),a("code",[e._v("allowed_headers")]),e._v(" to include those headers. You can also set it to "),a("code",[e._v("['*']")]),e._v(" to allow all custom headers.")])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("Note:")]),e._v(" If you are explicitly whitelisting headers, you must include "),a("code",[e._v("Origin")]),e._v(" or requests will fail to be recognized as CORS.")])]),e._v(" "),a("h3",{attrs:{id:"options"}},[e._v("Options")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Option")]),e._v(" "),a("th",[e._v("Description")]),e._v(" "),a("th",[e._v("Default value")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("paths")]),e._v(" "),a("td",[e._v("You can enable CORS for 1 or multiple paths, eg. "),a("code",[e._v("['api/*']")])]),e._v(" "),a("td",[a("code",[e._v("array()")])])]),e._v(" "),a("tr",[a("td",[e._v("allowed_origins")]),e._v(" "),a("td",[e._v("Matches the request origin. Wildcards can be used, eg "),a("code",[e._v("*.mydomain.com")])]),e._v(" "),a("td",[a("code",[e._v("array('*')")])])]),e._v(" "),a("tr",[a("td",[e._v("allowed_origins_patterns")]),e._v(" "),a("td",[e._v("Matches the request origin with "),a("code",[e._v("preg_match")]),e._v(".")]),e._v(" "),a("td",[a("code",[e._v("array()")])])]),e._v(" "),a("tr",[a("td",[e._v("allowed_methods")]),e._v(" "),a("td",[e._v("Matches the request method.")]),e._v(" "),a("td",[a("code",[e._v("array('*')")])])]),e._v(" "),a("tr",[a("td",[e._v("allowed_headers")]),e._v(" "),a("td",[e._v("Sets the Access-Control-Allow-Headers response header.")]),e._v(" "),a("td",[a("code",[e._v("array('*')")])])]),e._v(" "),a("tr",[a("td",[e._v("exposed_headers")]),e._v(" "),a("td",[e._v("Sets the Access-Control-Expose-Headers response header.")]),e._v(" "),a("td",[a("code",[e._v("false")])])]),e._v(" "),a("tr",[a("td",[e._v("max_age")]),e._v(" "),a("td",[e._v("Sets the Access-Control-Max-Age response header.")]),e._v(" "),a("td",[a("code",[e._v("0")])])]),e._v(" "),a("tr",[a("td",[e._v("supports_credentials")]),e._v(" "),a("td",[e._v("Sets the Access-Control-Allow-Credentials header.")]),e._v(" "),a("td",[a("code",[e._v("false")])])])])]),e._v(" "),a("p",[a("code",[e._v("allowed_origins")]),e._v(", "),a("code",[e._v("allowed_headers")]),e._v(" and "),a("code",[e._v("allowed_methods")]),e._v(" can be set to "),a("code",[e._v("['*']")]),e._v(" to accept any value.")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("Note:")]),e._v(" Try to be a specific as possible. You can start developing with loose constraints, but it's better to be as strict as possible!")])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("Note:")]),e._v(" Because of "),a("a",{attrs:{href:"http://symfony.com/doc/current/reference/configuration/framework.html#http-method-override",target:"_blank",rel:"noopener noreferrer"}},[e._v("http method overriding"),a("OutboundLink")],1),e._v(" in Laravel, allowing POST methods will also enable the API users to perform PUT and DELETE requests as well.")])]),e._v(" "),a("h3",{attrs:{id:"lumen"}},[e._v("Lumen")]),e._v(" "),a("p",[e._v("On Lumen, just register the ServiceProvider manually in your "),a("code",[e._v("bootstrap/app.php")]),e._v(" file:")]),e._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$app")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Fruitcake\\"),a("span",{pre:!0,attrs:{class:"token package"}},[e._v("Cors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("CorsServiceProvider")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("Also copy the "),a("a",{attrs:{href:"https://github.com/fruitcake/laravel-cors/blob/master/config/cors.php",target:"_blank",rel:"noopener noreferrer"}},[e._v("cors.php"),a("OutboundLink")],1),e._v(" config file to "),a("code",[e._v("config/cors.php")]),e._v(" and put it into action:")]),e._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$app")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("configure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[e._v("'cors'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("h2",{attrs:{id:"global-usage-for-lumen"}},[e._v("Global usage for Lumen")]),e._v(" "),a("p",[e._v("To allow CORS for all your routes, add the "),a("code",[e._v("HandleCors")]),e._v(" middleware to the global middleware and set the "),a("code",[e._v("paths")]),e._v(" property in the config.")]),e._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$app")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("middleware")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n    Fruitcake\\"),a("span",{pre:!0,attrs:{class:"token package"}},[e._v("Cors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("HandleCors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("h3",{attrs:{id:"disabling-csrf-protection-for-your-api"}},[e._v("Disabling CSRF protection for your API")]),e._v(" "),a("p",[e._v("If possible, use a different route group with CSRF protection enabled.\nOtherwise you can disable CSRF for certain requests in "),a("code",[e._v("App\\Http\\Middleware\\VerifyCsrfToken")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("protected")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$except")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[e._v("'api/*'")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("h2",{attrs:{id:"license"}},[e._v("License")]),e._v(" "),a("p",[e._v("Released under the MIT License, see "),a("a",{attrs:{href:"LICENSE"}},[e._v("LICENSE")]),e._v(".")])])}),[],!1,null,null,null);t.default=r.exports}}]);